const i="d265053b-d8ee-47d1-b4b8-b14ac07b00cd";const h=chrome.identity.getRedirectURL(),u="https://hs-util-ext.vercel.app/api/token-exchange",f=async()=>{const o=`https://app.hubspot.com/oauth/authorize?client_id=${i}&redirect_uri=${encodeURIComponent(h)}&scope=content%20oauth`;try{const e=await chrome.identity.launchWebAuthFlow({url:o,interactive:!0}),t=new URL(e).searchParams.get("code");if(!t)throw new Error("No code received");return p(t)}catch(e){throw console.error("Auth error:",e),e}},p=async o=>{try{const e=await fetch(u,{method:"POST",headers:{"Content-Type":"application/json","X-Extension-Id":chrome.runtime.id},body:JSON.stringify({code:o,redirect_uri:chrome.identity.getRedirectURL()})});if(!e.ok){const t=await e.text();throw console.error("Token exchange failed:",t),new Error(`Token exchange failed: ${e.status}`)}const r=await e.json();if(console.log("Token exchange response:",r),!r.access_token||!r.refresh_token)throw console.error("Missing required tokens in response:",r),new Error("Incomplete token data received");return r}catch(e){throw console.error("Error in exchangeCodeForToken:",e),e}},w=async o=>(await fetch("https://api.hubapi.com/account-info/v3/details",{headers:{Authorization:`Bearer ${o}`}})).json(),d=async o=>{const e=await fetch("https://api.hubapi.com/oauth/v1/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"refresh_token",client_id:i,client_secret:null,refresh_token:o})});if(!e.ok){const t=await e.text();throw console.error("Token refresh failed:",t),new Error(`Token refresh failed: ${e.status}`)}const r=await e.json();return console.log("Token refresh response:",r),r},l=o=>{if(!o)return!0;try{if(o.includes(".")){const r=JSON.parse(atob(o.split(".")[1])).exp*1e3;return Date.now()>=r}return!0}catch(e){return console.error("Error checking token expiry:",e),!0}},c=async o=>{if(!o||!o.refreshToken)throw new Error("Invalid account or missing refresh token");try{if(l(o.accessToken)){console.log("Token expired, refreshing...");const e=await d(o.refreshToken),s=((await chrome.storage.sync.get("hubspotAccounts")).hubspotAccounts||[]).map(n=>n.hubId===o.hubId?{...n,accessToken:e.access_token,refreshToken:e.refresh_token,tokenTimestamp:Date.now()}:n);return await chrome.storage.sync.set({hubspotAccounts:s}),e.access_token}return o.accessToken}catch(e){throw console.error("Token refresh error:",e),new Error("Failed to refresh token. Please re-authenticate.")}},k=async(o,e)=>{try{const r=await c(e),t=await fetch(`https://api.hubapi.com/content/api/v4/custom_widgets/${o}`,{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!t.ok){const s=await t.text();if(console.error("Module info fetch failed:",s),t.status===401){console.log("Unauthorized, attempting token refresh...");const n=await c({...e,accessToken:null}),a=await fetch(`https://api.hubapi.com/content/api/v4/custom_widgets/${o}`,{headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"}});if(!a.ok)throw new Error(`Failed to fetch module info: ${a.status}`);return a.json()}throw new Error(`Failed to fetch module info: ${t.status}`)}return t.json()}catch(r){throw console.error("Module info error:",r),r}};export{k as a,w as g,f as i};
