const i="d265053b-d8ee-47d1-b4b8-b14ac07b00cd",d="5a5012cd-85c7-4834-856b-89fbd5cd6930",c=chrome.identity.getRedirectURL();console.log("Redirect URIs:",c);const w=async()=>{const o=crypto.randomUUID();console.log("REDIRECT_URI:",c);const e=["oauth","content"].join(" "),t=`https://app.hubspot.com/oauth/authorize?client_id=${encodeURIComponent(i)}&redirect_uri=${encodeURIComponent(c)}&scope=${encodeURIComponent(e)}&state=${encodeURIComponent(o)}&response_type=code`;console.log("Complete Auth URL:",t);try{console.log("Starting auth flow...");const r=await chrome.identity.launchWebAuthFlow({url:t,interactive:!0});if(console.log("Received redirect URL:",r),!r)throw new Error("Authentication was cancelled");const s=new URL(r).searchParams,n=s.get("code");if(s.get("state")!==o)throw new Error("State mismatch - possible CSRF attack");if(!n)throw new Error("No authorization code received");return await u(n)}catch(r){throw r.message==="The user did not approve access."?new Error("Authentication was cancelled by the user"):(console.error("Auth flow failed:",r),r)}},u=async o=>{const e=await fetch("https://api.hubapi.com/oauth/v1/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"authorization_code",client_id:i,client_secret:d,redirect_uri:c,code:o})});if(!e.ok){const r=await e.text();throw console.error("Token exchange failed:",r),new Error(`Token exchange failed: ${e.status}`)}const t=await e.json();if(console.log("Token exchange response:",t),!t.access_token||!t.refresh_token)throw console.error("Missing required tokens in response:",t),new Error("Incomplete token data received");return t},f=async o=>(await fetch("https://api.hubapi.com/account-info/v3/details",{headers:{Authorization:`Bearer ${o}`}})).json(),p=async o=>{const e=await fetch("https://api.hubapi.com/oauth/v1/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"refresh_token",client_id:i,client_secret:d,refresh_token:o})});if(!e.ok){const r=await e.text();throw console.error("Token refresh failed:",r),new Error(`Token refresh failed: ${e.status}`)}const t=await e.json();return console.log("Token refresh response:",t),t},l=o=>{if(!o)return!0;try{if(o.includes(".")){const t=JSON.parse(atob(o.split(".")[1])).exp*1e3;return Date.now()>=t}return!0}catch(e){return console.error("Error checking token expiry:",e),!0}},h=async o=>{if(!o||!o.refreshToken)throw new Error("Invalid account or missing refresh token");try{if(l(o.accessToken)){console.log("Token expired, refreshing...");const e=await p(o.refreshToken),s=((await chrome.storage.sync.get("hubspotAccounts")).hubspotAccounts||[]).map(n=>n.hubId===o.hubId?{...n,accessToken:e.access_token,refreshToken:e.refresh_token,tokenTimestamp:Date.now()}:n);return await chrome.storage.sync.set({hubspotAccounts:s}),e.access_token}return o.accessToken}catch(e){throw console.error("Token refresh error:",e),new Error("Failed to refresh token. Please re-authenticate.")}},k=async(o,e)=>{try{const t=await h(e),r=await fetch(`https://api.hubapi.com/content/api/v4/custom_widgets/${o}`,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"}});if(!r.ok){const s=await r.text();if(console.error("Module info fetch failed:",s),r.status===401){console.log("Unauthorized, attempting token refresh...");const n=await h({...e,accessToken:null}),a=await fetch(`https://api.hubapi.com/content/api/v4/custom_widgets/${o}`,{headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"}});if(!a.ok)throw new Error(`Failed to fetch module info: ${a.status}`);return a.json()}throw new Error(`Failed to fetch module info: ${r.status}`)}return r.json()}catch(t){throw console.error("Module info error:",t),t}};export{k as a,f as g,w as i};
